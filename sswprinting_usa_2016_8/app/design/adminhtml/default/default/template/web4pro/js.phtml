<?php
/**
 * Created by PhpStorm.
 * User: dmitriy
 * Date: 18.08.15
 * Time: 15:36
 */
?>
<script type="text/javascript">
    var attributeOption = {
        table : $('uuid_block'),
        templateSyntax : /(^|.|\r|\n)({{(\w+)}})/,
        templateText : templateUUID,
        templateOption: templateOption,
        itemCount : 0,
        optionCount:new Array(),
        totalItems : 0,
        add : function(data) {
            this.template = new Template(this.templateText, this.templateSyntax);
            var isNewOption = false;
            if(!data.id){
                data = {};
                data.id  = this.itemCount;
                isNewOption = true;
            }

            Element.insert(this.table, {after: this.template.evaluate(data)});
            if (isNewOption && !this.isReadOnly) {
                this.enableNewOptionDeleteButton(data.id);
            }
            this.bindRemoveButtons();
            this.optionCount[data.id]=1;
            this.itemCount++;
            this.totalItems++;
            this.updateItemsCountField();
        },

        addOption:function(data) {
            this.template = new Template(this.templateOption, this.templateSyntax);
            var isNewOption = false;
            var target = data.target;
            if(!data.id){
                data = {};
                data.id  = target.rel;
                data.jd  = this.optionCount[target.rel]
                isNewOption = true;
            }

            Element.insert(target, {before: this.template.evaluate(data)});
            this.optionCount[target.rel]++;
            /*if (isNewOption && !this.isReadOnly) {
                this.enableNewOptionDeleteButton(data.id);
            }
            //this.bindRemoveButtons();
            //this.updateItemsCountField();*/
        },
        remove : function(event){
            var element = $(Event.findElement(event)).parentNode; // !!! Button already
            // have table parent in safari
            // Safari workaround

            if(element){
                element.parentNode.removeChild(element);
                this.totalItems--;
                this.updateItemsCountField();
            }
        },

        updateItemsCountField: function() {
            if (this.totalItems > 0) {
                $('option-count-check').value = '1';
            } else {
                $('option-count-check').value = '';
            }
        },
        enableNewOptionDeleteButton: function(id) {
            $$('#delete_button_container_' + id + ' button').each(function(button) {
                button.enable();
                button.removeClassName('disabled');
            });
        },
        bindRemoveButtons : function(){
            var buttons = $$('.delete-option');
            for(var i=0;i<buttons.length;i++){
                if(!$(buttons[i]).binded){
                    $(buttons[i]).binded = true;
                    Event.observe(buttons[i], 'click', this.remove.bind(this));
                }
            }
            var buttons = $$('.add-option');
            for(var i=0;i<buttons.length;i++){
                if(!$(buttons[i]).binded){
                    $(buttons[i]).binded = true;
                    $(buttons[i]).rel=this.itemCount;
                    Event.observe(buttons[i], 'click', this.addOption.bind(this));
                }
            }
        }

    }
    if($('row-template')){
        $('row-template').remove();
    }
    attributeOption.bindRemoveButtons();

    if($('add_new_option_button')){
        Event.observe('add_new_option_button', 'click', attributeOption.add.bind(attributeOption));
    }

</script>